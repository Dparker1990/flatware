= Flatware

A drop in replacement for your Spork that's a bit more up scale.

Flatware aims to be a distributed cucumber runner that speaks cucumber's DRB protocol. You will run it like spork, but instead of running in synchronous it will distribute your scenarios.

== Features (eventually)

* Reliable enough to use as part of your Continuous Integration system
* Always accounts for every feature or spec you ask it to run
* If you know how to use Spork you know how to use Flatware
* Uses heuristics to run your slowest tests first 

== Tinkering

Flatware is tested with aruba. In order to get a demo cucumber project you can add the `@no-clobber` tag to `features/flatware.feature` and run the test with `cucumber features/flatware.feature`. Now you should have a `./tmp/aruba` directory. CD there and you can run the `worker` and `dispatcher` binaries, like `../../bin/worker` and `../../bin/dispatcher`

== Resources

The excellent ZeroMQ guide: http://zguide.zeromq.org/page:all

== Contributing to Flatware
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011-2012 Brian Dunn. See LICENSE.txt for
further details.

